// Mixins

// Clearfix
@mixin clearfix {
  *zoom: 1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

// Clear lists
@mixin delistify {
  list-style: none;
  padding-left: 0;
}

// Dots
@mixin dot {
  position: absolute;
  content: ' ';
  width: 5px;
  height: 5px;
  border-radius: 100%;
  background: $black;
  z-index: $z-dots;
  display: none;
  @include media-md {
    display: block;
  }
}

@mixin first-line-dots($dist-to-baseline) {
  &:before{
    @include dot;
    top: $dist-to-baseline;
    left: -1 * $col - $teensy-pad - 2px;
    @include media-huge {
      left: calc( -1 * #{$col-huge} - #{$teensy-pad} - 2px );
    }

  }
  &:after{
    @include dot;
    top: $dist-to-baseline;
    left: 7 * $col - $teensy-pad - 2px;
    @include media-huge {
      left: calc( 7 * #{$col-huge} - #{$teensy-pad} - 2px );
    }
  }
}

// Dashes
@mixin dash {
  @include font-mono;
  font-size: 40px;
  position: absolute;
  content: '-';
  color: $black;
  pointer-events: none;
}

@mixin dash-before($offset) {
    &:before {
      @include dash;
      top: -1 * $offset;
      left: -8px;
    }
    position: relative;
}

@mixin dash-after($offset)  {
    &:after {
      @include dash;
      bottom: -1 * $offset;
      left: -8px;
    }
    position: relative;
}

@mixin double-dash($top,$bot) {
  @include dash-before($top);
  @include dash-after($bot);
}

// Underline
@mixin gradient-underline ($bg,$line,$start,$stop) {
  background: linear-gradient(rgba($bg,0), rgba($bg,0) $start, rgba($line,1) $start, rgba($line,1) $stop, rgba($bg,0) $stop);
}

// Utilities
@mixin break-out-of-padding($padding-left, $padding-right) {
  position: relative;
  left: -1 * $padding-left;
  width: calc(100% + #{$padding-left} + #{$padding-right});
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-nano() {
  @media screen and (max-width: $breakpoint-tiny - 1) {
    @content;
  }
}
@mixin media-tiny() {
  @media screen and (min-width: $breakpoint-tiny) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-small) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-medium) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-large) {
    @content;
  }
}
@mixin media-huge() {
  @media screen and (min-width: $breakpoint-huge) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}

// Visually hide  
@mixin visually-hide {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding:0 !important;
  border:0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
}
